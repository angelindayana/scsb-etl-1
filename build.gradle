buildscript {
    ext {
        springBootVersion = '1.3.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.3.2"
    }
}

plugins {
    id "org.sonarqube" version "2.0.1"
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'net.saliman.cobertura'
apply plugin: 'jacoco'

sonarqube {
    properties {
        property "systemProp.sonar.host.url", "http://174.129.129.28:9000"
        property "systemProp.sonar.jdbc.url", "jdbc:mysql://scsb-mysql:3306/sonar"
        property "systemProp.sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
        property "sonar.projectName", "scsb-etl"
        property "systemProp.sonar.jdbc.username", "sonar"
        property "systemProp.sonar.jdbc.password", "sonar"
    }
}

//added to accept systemproperties while executing gradlew test cmd
test {
    systemProperties = System.properties
}

jar {
    baseName = 'scsb-etl'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.apache.camel:camel-spring-boot-starter:2.18.0')
    compile('org.apache.camel:camel-metrics:2.18.0')
    compile('org.apache.camel:camel-ftp:2.18.0')
    compile('org.apache.camel:camel-csv:2.18.0')
    compile('org.apache.camel:camel-bindy:2.18.0')
    compile('org.apache.camel:camel-mail:2.18.0')
    compile('org.apache.camel:camel-stream:2.18.0')
    compile('org.apache.camel:camel-jaxb:2.17.1')
    compile('org.apache.camel:camel-zipfile:2.17.1')

    compile('org.apache.commons:commons-csv:1.4')
    compile('org.apache.commons:commons-lang3:3.4')

    compile('org.apache.activemq:activemq-camel:5.14.1')
    compile('org.apache.activemq:activemq-pool:5.14.1')
    compile('org.apache.activemq:activemq-broker:5.14.1')
    compile('org.apache.activemq:activemq-client:5.14.1')

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-ws')

    compile('com.google.guava:guava')
    compile('commons-io:commons-io:2.5')
    compile('commons-beanutils:commons-beanutils:1.9.2')
    compile('info.freelibrary:freelib-marc4j:2.6.12')

    compile('mysql:mysql-connector-java:6.0.3')

    compile('io.springfox:springfox-swagger-ui:2.5.0')
    compile('io.springfox:springfox-swagger2:2.5.0')
    compile('org.codehaus.jackson:jackson-mapper-asl:1.9.13')
    compile('org.codehaus.jettison:jettison:1.3.7')
    compile('org.codehaus.jackson:jackson-mapper-asl:1.9.13')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

cobertura {
    coverageFormats = ['xml', 'html']
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled = true
        html.destination "${buildDir}/jacocoHtml"
    }
}